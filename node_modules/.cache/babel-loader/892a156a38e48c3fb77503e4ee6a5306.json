{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar React = require('react');\n\nvar sizerStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  visibility: 'hidden',\n  height: 0,\n  overflow: 'scroll',\n  whiteSpace: 'pre'\n};\nvar AutosizeInput = React.createClass({\n  displayName: 'AutosizeInput',\n  propTypes: {\n    className: React.PropTypes.string,\n    // className for the outer element\n    defaultValue: React.PropTypes.any,\n    // default field value\n    inputClassName: React.PropTypes.string,\n    // className for the input element\n    inputStyle: React.PropTypes.object,\n    // css styles for the input element\n    minWidth: React.PropTypes.oneOfType([// minimum width for input element\n    React.PropTypes.number, React.PropTypes.string]),\n    onChange: React.PropTypes.func,\n    // onChange handler: function(newValue) {}\n    placeholder: React.PropTypes.string,\n    // placeholder text\n    placeholderIsMinWidth: React.PropTypes.bool,\n    // don't collapse size to less than the placeholder\n    style: React.PropTypes.object,\n    // css styles for the outer element\n    value: React.PropTypes.any\n  },\n  // field value\n  getDefaultProps: function getDefaultProps() {\n    return {\n      minWidth: 1\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      inputWidth: this.props.minWidth\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.copyInputStyles();\n    this.updateInputWidth();\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    this.updateInputWidth();\n  },\n  copyInputStyles: function copyInputStyles() {\n    if (!this.isMounted() || !window.getComputedStyle) {\n      return;\n    }\n\n    var inputStyle = window.getComputedStyle(this.refs.input);\n\n    if (!inputStyle) {\n      return;\n    }\n\n    var widthNode = this.refs.sizer;\n    widthNode.style.fontSize = inputStyle.fontSize;\n    widthNode.style.fontFamily = inputStyle.fontFamily;\n    widthNode.style.fontWeight = inputStyle.fontWeight;\n    widthNode.style.fontStyle = inputStyle.fontStyle;\n    widthNode.style.letterSpacing = inputStyle.letterSpacing;\n\n    if (this.props.placeholder) {\n      var placeholderNode = this.refs.placeholderSizer;\n      placeholderNode.style.fontSize = inputStyle.fontSize;\n      placeholderNode.style.fontFamily = inputStyle.fontFamily;\n      placeholderNode.style.fontWeight = inputStyle.fontWeight;\n      placeholderNode.style.fontStyle = inputStyle.fontStyle;\n      placeholderNode.style.letterSpacing = inputStyle.letterSpacing;\n    }\n  },\n  updateInputWidth: function updateInputWidth() {\n    if (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {\n      return;\n    }\n\n    var newInputWidth = undefined;\n\n    if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n      newInputWidth = Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;\n    } else {\n      newInputWidth = this.refs.sizer.scrollWidth + 2;\n    }\n\n    if (newInputWidth < this.props.minWidth) {\n      newInputWidth = this.props.minWidth;\n    }\n\n    if (newInputWidth !== this.state.inputWidth) {\n      this.setState({\n        inputWidth: newInputWidth\n      });\n    }\n  },\n  getInput: function getInput() {\n    return this.refs.input;\n  },\n  focus: function focus() {\n    this.refs.input.focus();\n  },\n  blur: function blur() {\n    this.refs.input.blur();\n  },\n  select: function select() {\n    this.refs.input.select();\n  },\n  render: function render() {\n    var sizerValue = this.props.defaultValue || this.props.value || '';\n    var wrapperStyle = this.props.style || {};\n    if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n    var inputStyle = _extends({}, this.props.inputStyle);\n\n    inputStyle.width = this.state.inputWidth + 'px';\n    inputStyle.boxSizing = 'content-box';\n\n    var inputProps = _extends({}, this.props);\n\n    inputProps.className = this.props.inputClassName;\n    inputProps.style = inputStyle; // ensure props meant for `AutosizeInput` don't end up on the `input`\n\n    delete inputProps.inputClassName;\n    delete inputProps.inputStyle;\n    delete inputProps.minWidth;\n    delete inputProps.placeholderIsMinWidth;\n    return React.createElement('div', {\n      className: this.props.className,\n      style: wrapperStyle\n    }, React.createElement('input', _extends({}, inputProps, {\n      ref: 'input'\n    })), React.createElement('div', {\n      ref: 'sizer',\n      style: sizerStyle\n    }, sizerValue), this.props.placeholder ? React.createElement('div', {\n      ref: 'placeholderSizer',\n      style: sizerStyle\n    }, this.props.placeholder) : null);\n  }\n});\nmodule.exports = AutosizeInput;","map":{"version":3,"sources":["/home/dani/komposzt/git@github.com:danielvarsas/muckhost/node_modules/react-select-plus/node_modules/react-input-autosize/lib/AutosizeInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","require","sizerStyle","position","top","left","visibility","height","overflow","whiteSpace","AutosizeInput","createClass","displayName","propTypes","className","PropTypes","string","defaultValue","any","inputClassName","inputStyle","object","minWidth","oneOfType","number","onChange","func","placeholder","placeholderIsMinWidth","bool","style","value","getDefaultProps","getInitialState","inputWidth","props","componentDidMount","copyInputStyles","updateInputWidth","componentDidUpdate","isMounted","window","getComputedStyle","refs","input","widthNode","sizer","fontSize","fontFamily","fontWeight","fontStyle","letterSpacing","placeholderNode","placeholderSizer","scrollWidth","newInputWidth","undefined","Math","max","state","setState","getInput","focus","blur","select","render","sizerValue","wrapperStyle","display","width","boxSizing","inputProps","createElement","ref","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar React = require('react');\n\nvar sizerStyle = { position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre' };\n\nvar AutosizeInput = React.createClass({\n\tdisplayName: 'AutosizeInput',\n\n\tpropTypes: {\n\t\tclassName: React.PropTypes.string, // className for the outer element\n\t\tdefaultValue: React.PropTypes.any, // default field value\n\t\tinputClassName: React.PropTypes.string, // className for the input element\n\t\tinputStyle: React.PropTypes.object, // css styles for the input element\n\t\tminWidth: React.PropTypes.oneOfType([// minimum width for input element\n\t\tReact.PropTypes.number, React.PropTypes.string]),\n\t\tonChange: React.PropTypes.func, // onChange handler: function(newValue) {}\n\t\tplaceholder: React.PropTypes.string, // placeholder text\n\t\tplaceholderIsMinWidth: React.PropTypes.bool, // don't collapse size to less than the placeholder\n\t\tstyle: React.PropTypes.object, // css styles for the outer element\n\t\tvalue: React.PropTypes.any },\n\t// field value\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tminWidth: 1\n\t\t};\n\t},\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tinputWidth: this.props.minWidth\n\t\t};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.copyInputStyles();\n\t\tthis.updateInputWidth();\n\t},\n\tcomponentDidUpdate: function componentDidUpdate() {\n\t\tthis.updateInputWidth();\n\t},\n\tcopyInputStyles: function copyInputStyles() {\n\t\tif (!this.isMounted() || !window.getComputedStyle) {\n\t\t\treturn;\n\t\t}\n\t\tvar inputStyle = window.getComputedStyle(this.refs.input);\n\t\tif (!inputStyle) {\n\t\t\treturn;\n\t\t}\n\t\tvar widthNode = this.refs.sizer;\n\t\twidthNode.style.fontSize = inputStyle.fontSize;\n\t\twidthNode.style.fontFamily = inputStyle.fontFamily;\n\t\twidthNode.style.fontWeight = inputStyle.fontWeight;\n\t\twidthNode.style.fontStyle = inputStyle.fontStyle;\n\t\twidthNode.style.letterSpacing = inputStyle.letterSpacing;\n\t\tif (this.props.placeholder) {\n\t\t\tvar placeholderNode = this.refs.placeholderSizer;\n\t\t\tplaceholderNode.style.fontSize = inputStyle.fontSize;\n\t\t\tplaceholderNode.style.fontFamily = inputStyle.fontFamily;\n\t\t\tplaceholderNode.style.fontWeight = inputStyle.fontWeight;\n\t\t\tplaceholderNode.style.fontStyle = inputStyle.fontStyle;\n\t\t\tplaceholderNode.style.letterSpacing = inputStyle.letterSpacing;\n\t\t}\n\t},\n\tupdateInputWidth: function updateInputWidth() {\n\t\tif (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tvar newInputWidth = undefined;\n\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\tnewInputWidth = Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;\n\t\t} else {\n\t\t\tnewInputWidth = this.refs.sizer.scrollWidth + 2;\n\t\t}\n\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\tnewInputWidth = this.props.minWidth;\n\t\t}\n\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\tthis.setState({\n\t\t\t\tinputWidth: newInputWidth\n\t\t\t});\n\t\t}\n\t},\n\tgetInput: function getInput() {\n\t\treturn this.refs.input;\n\t},\n\tfocus: function focus() {\n\t\tthis.refs.input.focus();\n\t},\n\tblur: function blur() {\n\t\tthis.refs.input.blur();\n\t},\n\tselect: function select() {\n\t\tthis.refs.input.select();\n\t},\n\trender: function render() {\n\t\tvar sizerValue = this.props.defaultValue || this.props.value || '';\n\t\tvar wrapperStyle = this.props.style || {};\n\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\t\tvar inputStyle = _extends({}, this.props.inputStyle);\n\t\tinputStyle.width = this.state.inputWidth + 'px';\n\t\tinputStyle.boxSizing = 'content-box';\n\t\tvar inputProps = _extends({}, this.props);\n\t\tinputProps.className = this.props.inputClassName;\n\t\tinputProps.style = inputStyle;\n\t\t// ensure props meant for `AutosizeInput` don't end up on the `input`\n\t\tdelete inputProps.inputClassName;\n\t\tdelete inputProps.inputStyle;\n\t\tdelete inputProps.minWidth;\n\t\tdelete inputProps.placeholderIsMinWidth;\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\tReact.createElement('input', _extends({}, inputProps, { ref: 'input' })),\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ ref: 'sizer', style: sizerStyle },\n\t\t\t\tsizerValue\n\t\t\t),\n\t\t\tthis.props.placeholder ? React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ ref: 'placeholderSizer', style: sizerStyle },\n\t\t\t\tthis.props.placeholder\n\t\t\t) : null\n\t\t);\n\t}\n});\n\nmodule.exports = AutosizeInput;"]},"metadata":{},"sourceType":"script"}